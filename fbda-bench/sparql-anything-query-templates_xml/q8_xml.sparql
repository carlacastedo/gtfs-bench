PREFIX fx:  <http://sparql.xyz/facade-x/ns/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?route ?routeShortName ?routeDescription ?trip ?tripShortName ?service ?stopTime ?stop ?stopDescription ?serviceRule  WHERE {

	SERVICE <x-sparql-anything:location=../result/datasets/%format/%size/ROUTES.%format,%param,slice=%slice,strategy=%strategy,use-rdfs-member=true> {
    ?routeContainer rdfs:member [ a xyz:route_id ; rdfs:member ?route_id  ] .
    BIND ( fx:entity( "http://transport.linkeddata.es/madrid/metro/routes/", ?route_id ) AS ?route ) .
    OPTIONAL { ?routeContainer rdfs:member [ a xyz:route_short_name ; rdfs:member ?routeShortName  ] . }
    OPTIONAL { ?routeContainer rdfs:member [ a xyz:route_desc ; rdfs:member ?routeDescription  ] . }
	}

  # trips
  SERVICE <x-sparql-anything:location=../result/datasets/%format/%size/TRIPS.%format,%param,slice=%slice,strategy=%strategy,use-rdfs-member=true> {
    ?t rdfs:member [ a xyz:route_id ; rdfs:member ?route_id  ] .
    ?t rdfs:member [ a xyz:trip_id  ; rdfs:member ?trip_id  ] .
    BIND ( fx:entity( "http://transport.linkeddata.es/madrid/metro/trips/", ?trip_id ) AS ?trip ) .
    OPTIONAL { ?t rdfs:member [ a xyz:trip_short_name ; rdfs:member ?tripShortName ] . }
    ?t rdfs:member [ a xyz:service_id ; rdfs:member ?service_id  ] .
    BIND ( fx:entity( "http://transport.linkeddata.es/madrid/metro/services/", ?service_id ) AS ?service ) .
  }

  # stoptimes
  SERVICE <x-sparql-anything:location=../result/datasets/%format/%size/STOP_TIMES.%format,%param,slice=%slice,strategy=%strategy,use-rdfs-member=true> {
    ?stoptime rdfs:member [ a xyz:trip_id ; rdfs:member ?trip_id  ] .
    ?stoptime rdfs:member [ a xyz:stop_id ; rdfs:member ?stop_id  ] .
    ?stoptime  rdfs:member [ a xyz:arrival_time ; rdfs:member ?arrival_time  ] .
    BIND ( fx:entity( "http://transport.linkeddata.es/madrid/metro/stoptimes/",?trip_id,"-",?stop_id,"-",?arrival_time) AS ?stopTime )
  }

  # stops
	SERVICE <x-sparql-anything:location=../result/datasets/%format/%size/STOPS.%format,%param,slice=%slice,strategy=%strategy,use-rdfs-member=true> {
    ?stopContainer rdfs:member [ a xyz:stop_id ; rdfs:member ?stop_id  ] .
    BIND ( fx:entity( "http://transport.linkeddata.es/madrid/metro/stops/", ?stop_id ) AS ?stop )
    OPTIONAL { ?stopContainer rdfs:member [ a xyz:stop_desc ; rdfs:member ?stopDescription  ] . }
	}

  {
    # services1, calendar_rules
    SERVICE <x-sparql-anything:location=../result/datasets/%format/%size/CALENDAR.%format,%param,slice=%slice,strategy=%strategy,use-rdfs-member=true> {
      [] rdfs:member [ a xyz:service_id ; rdfs:member  ?service_id ] .
      BIND( fx:entity("http://transport.linkeddata.es/madrid/metro/calendar_rules/", ?service_id ) AS ?serviceRule ) .
    }
  } UNION {
    # service2, calendar_date_rules
    SERVICE <x-sparql-anything:location=../result/datasets/%format/%size/CALENDAR_DATES.%format,%param,slice=%slice,strategy=%strategy,use-rdfs-member=true> {
      [] rdfs:member [ a xyz:service_id ; rdfs:member ?service_id ] ; rdfs:member [ a xyz:date ; rdfs:member ?date  ] .
      BIND( fx:entity("http://transport.linkeddata.es/madrid/metro/calendar_date_rule/", ?service_id, "-", ?date ) AS ?serviceRule ) .
    }
  }




}
